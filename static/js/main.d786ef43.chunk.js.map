{"version":3,"sources":["slice.js","components/Todo.js","components/Form.js","components/Edit.js","components/App.js","store.js","index.js"],"names":["slice","createSlice","name","initialState","todos","headers","input_value","todo_edit_index","edit_mode","is_same","is_blank","reducers","createTodo","state","some","header","length","new_todo","todo","time","Date","toString","done","push","removeTodo","action","splice","payload","setInputValue","isDone","editMode","editTodo","actions","Todo","useSelector","reducer","dispatch","useDispatch","map","item","i","className","type","onChange","onClick","Form","onSubmit","e","preventDefault","placeholder","value","target","Edit","index","App","style","color","configureStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d786ef43.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nfunction getTime() {\n  let time = new Date().toString();\n  return time.slice(16, 25);\n};\n\nexport const slice = createSlice({\n  name: 'mySlice',\n  initialState: {\n    todos: [],           // Массив со всеми объектами todo\n    headers: [],         // Только сами todo, для упрощенной проверки на наличие такого же todo\n    input_value: '',     // Содержимое input'а, для передачи в form\n    todo_edit_index: '', // Номер todo в массиве, чтобы знать, что удалять/менять\n    edit_mode: false,    // Тогглер добавления/редактирования todo\n    is_same: false,      // Вкл/выкл предупреждение о наличии такого же todo\n    is_blank: false,     // Вкл/выкл предупреждение о пустом поле input\n  },\n  reducers: {\n    createTodo: (state) => {\n      const checkout = (header) => header === state.input_value;\n\n      if (state.headers.some(checkout)) {\n        state.is_same = true;\n        return;\n      }\n      if (state.input_value.length === 0) {\n        state.is_blank = true;\n        return;\n      } \n      else {\n        let new_todo = {\n          todo: state.input_value,\n          time: getTime(),\n          done: false\n        };\n        state.todos.push(new_todo);\n        state.headers.push(state.input_value);\n        state.input_value = '';\n        state.is_same = false;\n        state.is_blank = false;\n      };\n    },\n\n    removeTodo: (state, action) => {\n      state.todos.splice(action.payload, 1);\n      state.headers.splice(action.payload, 1);\n    },\n\n    setInputValue: (state, action) => {\n      state.input_value = action.payload;\n    },\n\n    isDone: (state, action) => {\n      state.todos[action.payload].done = !state.todos[action.payload].done;\n    },\n\n    editMode: (state, action) => {\n      state.todo_edit_index = action.payload;\n      state.edit_mode = !state.edit_mode;\n    },\n\n    editTodo: (state, action) => {\n      const checkout = (header) => header === state.input_value;\n\n      if (state.headers.some(checkout)) {\n        state.is_same = true;\n        return;\n      }\n      if (state.input_value.length === 0) {\n        state.is_blank = true;\n        return;\n      }\n      else {\n        state.todos[action.payload].todo = state.input_value;\n        state.headers[action.payload] = state.input_value;\n        state.input_value = '';\n        state.edit_mode = false;\n        state.is_same = false;\n        state.is_blank = false;\n      };\n    },\n  },\n})\n\nexport const { createTodo, removeTodo, setInputValue, isDone, editMode, editTodo } = slice.actions;\n\nexport default slice.reducer;","import { useSelector, useDispatch } from 'react-redux';\nimport { removeTodo, isDone, editMode } from '../slice';\nimport { MdDelete } from 'react-icons/md';\nimport { BsFillPencilFill } from 'react-icons/bs';\n\nfunction Todo() {\n  const todos = useSelector(state => state.reducer.todos);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {todos.map((item, i) => {\n        return (\n          <div className='d-flex justify-content-between align-items-center w-50 h-50 p-3 mb-2 mt-2 border' key={i}>\n              <div className='d-flex'>\n                <input className='form-check-input' \n                       type='checkbox' \n                       onChange={() => dispatch(isDone(i))}>\n                </input>\n                <p className={item.done ? 'text-decoration-line-through my-0 ms-3' : 'my-0 ms-3'}>\n                  {item.todo}\n                </p>\n            </div>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='my-0'>\n                {item.time}\n              </p>\n              <BsFillPencilFill className='mx-3'\n                                onClick={() => dispatch(editMode(i))}/>\n              <MdDelete onClick={() => dispatch(removeTodo(i))}/>\n            </div>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nexport default Todo;","import { useDispatch, useSelector } from 'react-redux';\nimport { createTodo, setInputValue } from '../slice';\n\nfunction Form() {\n  const input_value = useSelector(state => state.reducer.input_value);\n  const dispatch = useDispatch();\n\n  return (\n    <form onSubmit={e => {dispatch(createTodo()); e.preventDefault()}}>\n      <div className='input-group input-group-lg'>\n        <input className='form-control' \n               type='text' \n               placeholder='Add Todo...'\n               value={input_value}\n               onChange={e => dispatch(setInputValue(e.target.value))}>\n        </input>\n      </div>\n    </form>\n  )\n};\n\nexport default Form;","import { useSelector, useDispatch } from 'react-redux';\nimport { setInputValue, editTodo } from '../slice';\n\nfunction Edit() {\n  const index = useSelector((state) => state.reducer.todo_edit_index);\n  const input_value = useSelector(state => state.reducer.input_value);\n  const dispatch = useDispatch();\n\n  return (\n    <form onSubmit={e => {dispatch(editTodo(index)); e.preventDefault()}}>\n      <div className='input-group input-group-lg'>\n        <input className='form-control' \n               type='text' \n               placeholder='Edit Todo...'\n               value={input_value}\n               onChange={e => dispatch(setInputValue(e.target.value))}>\n        </input>\n      </div>\n    </form>\n  )\n};\n\nexport default Edit;","import { useSelector } from 'react-redux';\nimport Todo from './Todo';\nimport Form from './Form';\nimport Edit from './Edit';\n\nfunction App() {\n  const edit_mode = useSelector((state) => state.reducer.edit_mode);\n  const is_same = useSelector((state) => state.reducer.is_same);\n  const is_blank = useSelector((state) => state.reducer.is_blank);\n\n  return (\n    <div className='d-flex flex-column align-items-center p-3'>\n      <h1 className='h1'>Todos</h1>\n      {edit_mode ? <Edit/> : <Form/>}\n      {is_blank ? <sub className='mb-3 mt-2' style={{color: 'red'}}>Пустое поле недопустимо!</sub> : null}\n      {is_same ? <sub className='mb-3 mt-2' style={{color: 'red'}}>Такой Todo уже существует!</sub> : null}\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport reducer from './slice';\n\nexport default configureStore({\n  reducer: {\n    reducer: reducer,\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}